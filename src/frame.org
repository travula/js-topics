#+TITLE: An example to demonstrate frames
#+AUTHOR: VLEAD
#+DATE: [2017-08-28 Mon]
#+SETUPFILE: ./org-templates/level-0.org
#+TAGS: boilerplate(b)
#+EXCLUDE_TAGS: boilerplate
#+OPTIONS: ^:nil

* Introduction
  This document lists ways to work with iframes and
  dynamically populate the content of iframes.

* Requirement.
  Each lab in virtual labs is a web application.  There is a
  need to build a virtual labs portal dynamically using lab
  data service since the data related to a lab - hosting
  information, lab image, etc. will change over time.  The
  lab data service provides data about different
  disciplines, institutes, labs and their hosted url.

* Design 
  Since each lab is a web application without any API, the
  access to its content is only through the lab's url.  To
  display the contents of a lab from the landing page is to
  use an [[https://www.w3schools.com/TAgs/tag_iframe.asp][iframe]].  The lab page becomes an external web page
  embedded into the vlabs portal.

* Implementation  
   Ways to manipulate the content of an iframe dynamically
   is shown using the following example.  The iframe is made
   part of a division. 

** Structure of the html
#+begin_src html :tangle iframe.html
<html>
  <head>
    <meta content="text/html;charset=utf-8" http-equiv="Content-Type">
    <meta content="utf-8" http-equiv="encoding">
    <script type="text/javascript" src="iframe.js"></script>
    <link rel="stylesheet" href="style.css"/>
  </head>
  <body>
    <div id='hello'>
      <p> Hello </p>
    </div>
    <div id="div_iframe"></div>
    <div id='insert_delete_frame_btns'>
      <button onclick="insertFrame()">Insert frame</button>
      <button onclick="deleteFrame()">Delete frame</button>
    </div>

    <div id='set_sources_to_frame_btns'>
      <button onclick="setWebAppInIframe()">set webapp in iframe</button>
      <button onclick="setWebAppInSandBoxedIframe()">set webapp in sandboxed iframe</button>
    </div>
   
    <div id='manipualate_frame_content_btns'>
      <button onclick="setContentInIframe()">set content in iframe</button>
      <button onclick="resetContentInIframe()">reset content in iframe</button>
    </div>
  </body>
</html>

#+end_src

** HTML loaded to iframe
#+begin_src html :tangle iframe_template.html
<html>
  <head></head>
  <body>
    <script>
      document.domain="localhost"
    </script>
    <div id="template-div">
    </div>
</html>
#+end_src

** Document Domain
Manipulation of iframe content from javascript loaded in the
document is possible if the both the iframe content and the
javascript manipulating the iframe are loaded from the same
domain. 

#+BEGIN_SRC js :tangle iframe.js
document.domain="localhost"

#+END_SRC
** Create a frame
Provide the attributes, and an iframe is created and
returned.  The attributes are name, id, width and height of
the frame.

#+begin_src js :tangle iframe.js
var createNewIframe = function(name, id, width, height) {
  var newIframe = document.createElement("iframe");
  newIframe.setAttribute("width", width);
  newIframe.setAttribute("height", height);
  newIframe.name = name;
  newIframe.id = id;
  return newIframe;
};

#+end_src

** Insert a Frame in a Division
Given a division, and an iframe, the iframe is inserted in
the division.

#+begin_src js :tangle iframe.js
var insertFrameInDivision = function(iframe, divId) {
  divElem = document.getElementById(divId);
  divElem.appendChild(iframe);
};

#+end_src

** Delete Frame from a Division
Given a frame and a division, an iframe within the division
is deleted.

#+begin_src js :tangle iframe.js
var deleteFrameInDivision = function(frameId, divId) {
  if (document.getElementById(divId).hasChildNodes()) {
    frameElem = document.getElementById(frameId);
    if (frameElem !== null) {
      frameElem.parentNode.removeChild(frameElem);
    }
  }
};

#+end_src

** Insert Frame
Insert a frame in the =div_iframe= division.  The name and
id of this frame is =iframe1=.

#+begin_src js :tangle iframe.js
var insertFrame = function() {
  newFrame = createNewIframe("iframe1", "iframe1", "100%", "30%");
  division = document.getElementById('div_iframe');
  insertFrameInDivision(newFrame, division.id);
};

#+end_src

** Delete Frame
Delete frame with id =frame1= in the =div_iframe= division.  

#+begin_src js :tangle iframe.js
var deleteFrame = function() {
  frame = document.getElementById('iframe1');
  division = document.getElementById('div_iframe');
  deleteFrameInDivision(frame.id, division.id);
};

#+end_src

** Set source of iframe
Set source of iframe with id =iframe1=.

#+begin_src js :tangle iframe.js
var setWebAppInIframe = function() {
  var iframe = document.getElementById("iframe1");
  iframe.src = "http://dev.vlabs.ac.in";
};

#+end_src

** Set source in a sandboxed iframe
Make an iframe sand boxed and set the source to it.
Sometimes this is necessary since certain web pages expand
out of iframe and these need to be sand boxed.

#+begin_src js :tangle iframe.js
var setWebAppInSandBoxedIframe = function() {
  deleteFrame();
  insertFrame();
  var iframe = document.getElementById("iframe1");
  iframe.sandbox = 'allow-forms allow-scripts allow-same-origin';
  iframe.src = "https://themeless.vlabs.ac.in";
};

#+end_src
** Change the content of an iframe
   Sometimes it might be handy to manipulate the contents of
   an iframe by accessing the elements within the iframe.
   We show this by loading a =template.html= as source of
   the iframe.  =template.html= has a division identified by
   =template-div=.  The content of the newly created iframe
   cannot be set immediately, therefore we wait for some
   time and then set the content of the newly created frame.

   Resetting the content in the same frame is just element
   manipulation where =template-div= is accessed and new
   content is set. 

#+BEGIN_SRC js :tangle iframe.js
var setContent = function() {
  var iframe = document.getElementById("iframe1");
  var content = iframe.contentWindow.document;
  var elem = content.getElementById('template-div');
  elem.innerHTML = "<p>Hello world</p>";
};

var setContentInIframe = function() {
  deleteFrame();
  insertFrame();
  var iframe = document.getElementById("iframe1");
  iframe.src = "./iframe_template.html";
  setTimeout(setContent, 100);
};

var resetContentInIframe = function() {
  var iframe = document.getElementById("iframe1");
  var content = iframe.contentWindow.document;
  var elem = content.getElementById('template-div');
  elem.innerHTML = "<p>Resetting Hello world</p>";
};


#+END_SRC
