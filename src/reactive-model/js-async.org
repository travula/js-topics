#+title:  Asynchronous Programming using Javascript

* Javascript Execution Model

Javascript's execution model consists of multiple runtimes.
Each runtime consists of the following:

 - Heap :: This is where thunks reside.

 - Stack :: This is used to save local variables and return
      addresses during a function call.

 - Queue :: The queue holds messages.  Each message holds a
	  thunk. 

At any given time only one function is running.   When that
function runs to completion, its frame is popped  off the
stack.   If the stack is empty, then the "top"-level
function is done.  At that point, the queue is checked for
any other thunks in the queue.   If so, the next thunk
in the queue is run.  

Multiple runtimes are allowed to exist simultaneously and
they communicate using the  =postMessage= method.  More on
this later. 




